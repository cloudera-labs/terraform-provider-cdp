// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GroupMembershipInfo Information about a group an actor belongs to. Includes information about the roles and resource roles assigned to the group.
//
// swagger:model GroupMembershipInfo
type GroupMembershipInfo struct {

	// The group CRN.
	// Required: true
	GroupCrn *string `json:"groupCrn"`

	// The group resource assignments.
	// Required: true
	ResourceAssignments []*ResourceAssignment `json:"resourceAssignments"`

	// The role CRNs assigned to the group.
	// Required: true
	RoleAssignments []string `json:"roleAssignments"`
}

// Validate validates this group membership info
func (m *GroupMembershipInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateGroupCrn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateResourceAssignments(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRoleAssignments(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GroupMembershipInfo) validateGroupCrn(formats strfmt.Registry) error {

	if err := validate.Required("groupCrn", "body", m.GroupCrn); err != nil {
		return err
	}

	return nil
}

func (m *GroupMembershipInfo) validateResourceAssignments(formats strfmt.Registry) error {

	if err := validate.Required("resourceAssignments", "body", m.ResourceAssignments); err != nil {
		return err
	}

	for i := 0; i < len(m.ResourceAssignments); i++ {
		if swag.IsZero(m.ResourceAssignments[i]) { // not required
			continue
		}

		if m.ResourceAssignments[i] != nil {
			if err := m.ResourceAssignments[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("resourceAssignments" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *GroupMembershipInfo) validateRoleAssignments(formats strfmt.Registry) error {

	if err := validate.Required("roleAssignments", "body", m.RoleAssignments); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GroupMembershipInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GroupMembershipInfo) UnmarshalBinary(b []byte) error {
	var res GroupMembershipInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
