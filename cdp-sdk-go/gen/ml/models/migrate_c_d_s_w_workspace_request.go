// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MigrateCDSWWorkspaceRequest Request object for CDSW workspace migration.
//
// swagger:model MigrateCDSWWorkspaceRequest
type MigrateCDSWWorkspaceRequest struct {

	// The Kubeconfig of the legacy CDSW instance.
	CdswKubeconfig string `json:"cdswKubeconfig,omitempty"`

	// Legacy CDSW to PvC migration timeout, in minutes.
	CdswMigrationTimeoutMinutes int32 `json:"cdswMigrationTimeoutMinutes,omitempty"`

	// Whether it is the final migration or not.
	FinalMigration bool `json:"finalMigration,omitempty"`

	// Whether it is an incremental migration or not.
	IncrementalMigration bool `json:"incrementalMigration,omitempty"`

	// Whether to stop the applications after the final migration or not.
	StopApplications bool `json:"stopApplications,omitempty"`

	// Whether to stop the jobs after the final migration or not.
	StopJobs bool `json:"stopJobs,omitempty"`

	// Whether to stop the models after the final migration or not.
	StopModels bool `json:"stopModels,omitempty"`

	// The workspace CRN to which the CDSW is migrated.
	// Required: true
	WorkspaceCrn *string `json:"workspaceCrn"`
}

// Validate validates this migrate c d s w workspace request
func (m *MigrateCDSWWorkspaceRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateWorkspaceCrn(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MigrateCDSWWorkspaceRequest) validateWorkspaceCrn(formats strfmt.Registry) error {

	if err := validate.Required("workspaceCrn", "body", m.WorkspaceCrn); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this migrate c d s w workspace request based on context it is used
func (m *MigrateCDSWWorkspaceRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *MigrateCDSWWorkspaceRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MigrateCDSWWorkspaceRequest) UnmarshalBinary(b []byte) error {
	var res MigrateCDSWWorkspaceRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
