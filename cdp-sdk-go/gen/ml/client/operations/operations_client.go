// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new operations API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for operations API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	CreateWorkspace(params *CreateWorkspaceParams) (*CreateWorkspaceOK, error)

	DeleteWorkspace(params *DeleteWorkspaceParams) (*DeleteWorkspaceOK, error)

	DescribeWorkspace(params *DescribeWorkspaceParams) (*DescribeWorkspaceOK, error)

	GetAuditEvents(params *GetAuditEventsParams) (*GetAuditEventsOK, error)

	GetControlPlaneAppVersion(params *GetControlPlaneAppVersionParams) (*GetControlPlaneAppVersionOK, error)

	GetKubeconfig(params *GetKubeconfigParams) (*GetKubeconfigOK, error)

	GetLatestWorkspaceVersion(params *GetLatestWorkspaceVersionParams) (*GetLatestWorkspaceVersionOK, error)

	GetLogs(params *GetLogsParams) (*GetLogsOK, error)

	GrantWorkspaceAccess(params *GrantWorkspaceAccessParams) (*GrantWorkspaceAccessOK, error)

	ListWorkspaceAccess(params *ListWorkspaceAccessParams) (*ListWorkspaceAccessOK, error)

	ListWorkspaces(params *ListWorkspacesParams) (*ListWorkspacesOK, error)

	ResumeWorkspace(params *ResumeWorkspaceParams) (*ResumeWorkspaceOK, error)

	RevokeWorkspaceAccess(params *RevokeWorkspaceAccessParams) (*RevokeWorkspaceAccessOK, error)

	SuspendWorkspace(params *SuspendWorkspaceParams) (*SuspendWorkspaceOK, error)

	UpgradeWorkspace(params *UpgradeWorkspaceParams) (*UpgradeWorkspaceOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  CreateWorkspace creates a cloudera machine learning workspace

  Provision a Kubernetes cluster and install the Cloudera Machine Learning application in it.
*/
func (a *Client) CreateWorkspace(params *CreateWorkspaceParams) (*CreateWorkspaceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateWorkspaceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "createWorkspace",
		Method:             "POST",
		PathPattern:        "/api/v1/ml/createWorkspace",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreateWorkspaceReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateWorkspaceOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*CreateWorkspaceDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
  DeleteWorkspace deletes cloudera machine learning workspace

  Deletes a Cloudera Machine Learning workspace.
*/
func (a *Client) DeleteWorkspace(params *DeleteWorkspaceParams) (*DeleteWorkspaceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteWorkspaceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteWorkspace",
		Method:             "POST",
		PathPattern:        "/api/v1/ml/deleteWorkspace",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteWorkspaceReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteWorkspaceOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*DeleteWorkspaceDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
  DescribeWorkspace describes cloudera machine learning workspace

  Describes a Cloudera Machine Learning workspace.
*/
func (a *Client) DescribeWorkspace(params *DescribeWorkspaceParams) (*DescribeWorkspaceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDescribeWorkspaceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "describeWorkspace",
		Method:             "POST",
		PathPattern:        "/api/v1/ml/describeWorkspace",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DescribeWorkspaceReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DescribeWorkspaceOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*DescribeWorkspaceDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
  GetAuditEvents gets all the events belong to a workspace crn

  Gets all the events belong to a workspace crn.
*/
func (a *Client) GetAuditEvents(params *GetAuditEventsParams) (*GetAuditEventsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAuditEventsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getAuditEvents",
		Method:             "POST",
		PathPattern:        "/api/v1/ml/getAuditEvents",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetAuditEventsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAuditEventsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GetAuditEventsDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
  GetControlPlaneAppVersion shows cloudera machine learning control plane app version

  Shows the version of Cloudera Machine Learning control plane app.
*/
func (a *Client) GetControlPlaneAppVersion(params *GetControlPlaneAppVersionParams) (*GetControlPlaneAppVersionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetControlPlaneAppVersionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getControlPlaneAppVersion",
		Method:             "POST",
		PathPattern:        "/api/v1/ml/getControlPlaneAppVersion",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetControlPlaneAppVersionReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetControlPlaneAppVersionOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GetControlPlaneAppVersionDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
  GetKubeconfig lists workspace access cloudera machine learning workspace

  Lists users that can perform Kubernetes operations on a Cloudera Machine Learning workspace via EKS.
*/
func (a *Client) GetKubeconfig(params *GetKubeconfigParams) (*GetKubeconfigOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetKubeconfigParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getKubeconfig",
		Method:             "POST",
		PathPattern:        "/api/v1/ml/getKubeconfig",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetKubeconfigReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetKubeconfigOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GetKubeconfigDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
  GetLatestWorkspaceVersion gets latest workspace version cloudera machine learning workspace

  Retrieves the latest version that Cloudera Machine Learning deploys to workspaces.
*/
func (a *Client) GetLatestWorkspaceVersion(params *GetLatestWorkspaceVersionParams) (*GetLatestWorkspaceVersionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLatestWorkspaceVersionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getLatestWorkspaceVersion",
		Method:             "POST",
		PathPattern:        "/api/v1/ml/getLatestWorkspaceVersion",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLatestWorkspaceVersionReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLatestWorkspaceVersionOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GetLatestWorkspaceVersionDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
  GetLogs gets all the logs belong to a request id

  Gets all the logs belong to a request id.
*/
func (a *Client) GetLogs(params *GetLogsParams) (*GetLogsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLogsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getLogs",
		Method:             "POST",
		PathPattern:        "/api/v1/ml/getLogs",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLogsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLogsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GetLogsDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
  GrantWorkspaceAccess grants workspace access cloudera machine learning workspace

  Grants an AWS user to perform Kubernetes operations on a Cloudera Machine Learning workspace via EKS.
*/
func (a *Client) GrantWorkspaceAccess(params *GrantWorkspaceAccessParams) (*GrantWorkspaceAccessOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGrantWorkspaceAccessParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "grantWorkspaceAccess",
		Method:             "POST",
		PathPattern:        "/api/v1/ml/grantWorkspaceAccess",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GrantWorkspaceAccessReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GrantWorkspaceAccessOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GrantWorkspaceAccessDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
  ListWorkspaceAccess lists workspace access cloudera machine learning workspace

  Lists users that can perform Kubernetes operations on a Cloudera Machine Learning workspace via EKS.
*/
func (a *Client) ListWorkspaceAccess(params *ListWorkspaceAccessParams) (*ListWorkspaceAccessOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListWorkspaceAccessParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "listWorkspaceAccess",
		Method:             "POST",
		PathPattern:        "/api/v1/ml/listWorkspaceAccess",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ListWorkspaceAccessReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ListWorkspaceAccessOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*ListWorkspaceAccessDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
  ListWorkspaces lists cloudera machine learning workspaces

  List Cloudera Machine Learning workspaces.
*/
func (a *Client) ListWorkspaces(params *ListWorkspacesParams) (*ListWorkspacesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListWorkspacesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "listWorkspaces",
		Method:             "POST",
		PathPattern:        "/api/v1/ml/listWorkspaces",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ListWorkspacesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ListWorkspacesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*ListWorkspacesDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
  ResumeWorkspace resumes cloudera machine learning workspace

  Resume a Cloudera Machine Learnings workspace.
*/
func (a *Client) ResumeWorkspace(params *ResumeWorkspaceParams) (*ResumeWorkspaceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewResumeWorkspaceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "resumeWorkspace",
		Method:             "POST",
		PathPattern:        "/api/v1/ml/resumeWorkspace",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ResumeWorkspaceReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ResumeWorkspaceOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*ResumeWorkspaceDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
  RevokeWorkspaceAccess revokes workspace access cloudera machine learning workspace

  Revokes an AWS user to perform Kubernetes operations on a Cloudera Machine Learning workspace via EKS.
*/
func (a *Client) RevokeWorkspaceAccess(params *RevokeWorkspaceAccessParams) (*RevokeWorkspaceAccessOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewRevokeWorkspaceAccessParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "revokeWorkspaceAccess",
		Method:             "POST",
		PathPattern:        "/api/v1/ml/revokeWorkspaceAccess",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &RevokeWorkspaceAccessReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*RevokeWorkspaceAccessOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*RevokeWorkspaceAccessDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
  SuspendWorkspace suspends cloudera machine learning workspace

  Suspend a Cloudera Machine Learning workspace.
*/
func (a *Client) SuspendWorkspace(params *SuspendWorkspaceParams) (*SuspendWorkspaceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSuspendWorkspaceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "suspendWorkspace",
		Method:             "POST",
		PathPattern:        "/api/v1/ml/suspendWorkspace",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SuspendWorkspaceReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SuspendWorkspaceOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*SuspendWorkspaceDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
  UpgradeWorkspace upgrades cloudera machine learning workspace

  Upgrades a Cloudera Machine Learning workspace to the latest available version.
*/
func (a *Client) UpgradeWorkspace(params *UpgradeWorkspaceParams) (*UpgradeWorkspaceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpgradeWorkspaceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "upgradeWorkspace",
		Method:             "POST",
		PathPattern:        "/api/v1/ml/upgradeWorkspace",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UpgradeWorkspaceReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpgradeWorkspaceOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*UpgradeWorkspaceDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
