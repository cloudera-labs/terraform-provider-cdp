// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudera/terraform-provider-cdp/cdp-sdk-go/gen/ml/models"
)

// GetLogsReader is a Reader for the GetLogs structure.
type GetLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetLogsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetLogsOK creates a GetLogsOK with default headers values
func NewGetLogsOK() *GetLogsOK {
	return &GetLogsOK{}
}

/*GetLogsOK handles this case with default header values.

Expected response to a valid request.
*/
type GetLogsOK struct {
	Payload *models.GetLogsResponse
}

func (o *GetLogsOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/ml/getLogs][%d] getLogsOK  %+v", 200, o.Payload)
}

func (o *GetLogsOK) GetPayload() *models.GetLogsResponse {
	return o.Payload
}

func (o *GetLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetLogsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLogsDefault creates a GetLogsDefault with default headers values
func NewGetLogsDefault(code int) *GetLogsDefault {
	return &GetLogsDefault{
		_statusCode: code,
	}
}

/*GetLogsDefault handles this case with default header values.

The default response on an error.
*/
type GetLogsDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get logs default response
func (o *GetLogsDefault) Code() int {
	return o._statusCode
}

func (o *GetLogsDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/ml/getLogs][%d] getLogs default  %+v", o._statusCode, o.Payload)
}

func (o *GetLogsDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetLogsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
