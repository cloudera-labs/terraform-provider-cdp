// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudera/terraform-provider-cdp/cdp-sdk-go/gen/datahub/models"
)

// SyncClusterReader is a Reader for the SyncCluster structure.
type SyncClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SyncClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSyncClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewSyncClusterDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSyncClusterOK creates a SyncClusterOK with default headers values
func NewSyncClusterOK() *SyncClusterOK {
	return &SyncClusterOK{}
}

/*SyncClusterOK handles this case with default header values.

Expected response to a valid request.
*/
type SyncClusterOK struct {
	Payload models.SyncClusterResponse
}

func (o *SyncClusterOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/datahub/syncCluster][%d] syncClusterOK  %+v", 200, o.Payload)
}

func (o *SyncClusterOK) GetPayload() models.SyncClusterResponse {
	return o.Payload
}

func (o *SyncClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSyncClusterDefault creates a SyncClusterDefault with default headers values
func NewSyncClusterDefault(code int) *SyncClusterDefault {
	return &SyncClusterDefault{
		_statusCode: code,
	}
}

/*SyncClusterDefault handles this case with default header values.

The default response on an error.
*/
type SyncClusterDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the sync cluster default response
func (o *SyncClusterDefault) Code() int {
	return o._statusCode
}

func (o *SyncClusterDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/datahub/syncCluster][%d] syncCluster default  %+v", o._statusCode, o.Payload)
}

func (o *SyncClusterDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *SyncClusterDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
