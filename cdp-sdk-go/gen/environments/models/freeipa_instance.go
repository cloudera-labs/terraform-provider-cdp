// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// FreeipaInstance Object for a FreeIPA instance providing specific information about the instance.
//
// swagger:model FreeipaInstance
type FreeipaInstance struct {

	// The fully qualified domain name of the instance in the service discovery cluster.
	DiscoveryFQDN string `json:"discoveryFQDN,omitempty"`

	// The instance group that contains the instance.
	InstanceGroup string `json:"instanceGroup,omitempty"`

	// The instance ID for the instance.
	InstanceID string `json:"instanceId,omitempty"`

	// The status of the instance.
	InstanceStatus string `json:"instanceStatus,omitempty"`

	// The type of the instance (either GATEWAY or GATEWAY_PRIMARY).
	InstanceType string `json:"instanceType,omitempty"`

	// The life cycle type for the instance (either NORMAL or SPOT).
	LifeCycle string `json:"lifeCycle,omitempty"`

	// The private IP of the instance.
	PrivateIP string `json:"privateIP,omitempty"`

	// The public IP of the instance.
	PublicIP string `json:"publicIP,omitempty"`

	// The SSH port of the instance.
	SSHPort int32 `json:"sshPort,omitempty"`
}

// Validate validates this freeipa instance
func (m *FreeipaInstance) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this freeipa instance based on context it is used
func (m *FreeipaInstance) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *FreeipaInstance) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FreeipaInstance) UnmarshalBinary(b []byte) error {
	var res FreeipaInstance
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
