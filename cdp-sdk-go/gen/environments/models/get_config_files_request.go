// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetConfigFilesRequest Request object for Datalake client configs.
//
// swagger:model GetConfigFilesRequest
type GetConfigFilesRequest struct {

	// config file set to retrieve.
	// Enum: [CLIENT KRB TRUSTSTORE_PEM TRUSTSTORE_JKS]
	ConfigSet string `json:"configSet,omitempty"`

	// The CRN of the Datalake
	// Required: true
	DatalakeCrn *string `json:"datalakeCrn"`

	// The Datalakservices to collect client configs.
	ServiceOverrideList []string `json:"serviceOverrideList"`
}

// Validate validates this get config files request
func (m *GetConfigFilesRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateConfigSet(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDatalakeCrn(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var getConfigFilesRequestTypeConfigSetPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["CLIENT","KRB","TRUSTSTORE_PEM","TRUSTSTORE_JKS"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getConfigFilesRequestTypeConfigSetPropEnum = append(getConfigFilesRequestTypeConfigSetPropEnum, v)
	}
}

const (

	// GetConfigFilesRequestConfigSetCLIENT captures enum value "CLIENT"
	GetConfigFilesRequestConfigSetCLIENT string = "CLIENT"

	// GetConfigFilesRequestConfigSetKRB captures enum value "KRB"
	GetConfigFilesRequestConfigSetKRB string = "KRB"

	// GetConfigFilesRequestConfigSetTRUSTSTOREPEM captures enum value "TRUSTSTORE_PEM"
	GetConfigFilesRequestConfigSetTRUSTSTOREPEM string = "TRUSTSTORE_PEM"

	// GetConfigFilesRequestConfigSetTRUSTSTOREJKS captures enum value "TRUSTSTORE_JKS"
	GetConfigFilesRequestConfigSetTRUSTSTOREJKS string = "TRUSTSTORE_JKS"
)

// prop value enum
func (m *GetConfigFilesRequest) validateConfigSetEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, getConfigFilesRequestTypeConfigSetPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *GetConfigFilesRequest) validateConfigSet(formats strfmt.Registry) error {

	if swag.IsZero(m.ConfigSet) { // not required
		return nil
	}

	// value enum
	if err := m.validateConfigSetEnum("configSet", "body", m.ConfigSet); err != nil {
		return err
	}

	return nil
}

func (m *GetConfigFilesRequest) validateDatalakeCrn(formats strfmt.Registry) error {

	if err := validate.Required("datalakeCrn", "body", m.DatalakeCrn); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetConfigFilesRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetConfigFilesRequest) UnmarshalBinary(b []byte) error {
	var res GetConfigFilesRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
