// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SecurityAccessRequest Security control configuration for FreeIPA and Datalake deployment. Choosing a CIDR will automatically create security groups. Alternatively existing security groups can be specified.
//
// swagger:model SecurityAccessRequest
type SecurityAccessRequest struct {

	// CIDR range which is allowed for inbound traffic. Either IPv4 or IPv6 is allowed.
	Cidr string `json:"cidr,omitempty"`

	// Security group where all other hosts are placed. Mutually exclusive with cidr.
	DefaultSecurityGroupID string `json:"defaultSecurityGroupId,omitempty"`

	// Security group where Knox-enabled hosts are placed. Mutually exclusive with cidr.
	SecurityGroupIDForKnox string `json:"securityGroupIdForKnox,omitempty"`
}

// Validate validates this security access request
func (m *SecurityAccessRequest) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SecurityAccessRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SecurityAccessRequest) UnmarshalBinary(b []byte) error {
	var res SecurityAccessRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
