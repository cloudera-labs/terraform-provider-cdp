// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudera/terraform-provider-cdp/cdp-sdk-go/gen/iam/models"
)

// UpdateLdapProviderReader is a Reader for the UpdateLdapProvider structure.
type UpdateLdapProviderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateLdapProviderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateLdapProviderOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewUpdateLdapProviderDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateLdapProviderOK creates a UpdateLdapProviderOK with default headers values
func NewUpdateLdapProviderOK() *UpdateLdapProviderOK {
	return &UpdateLdapProviderOK{}
}

/*UpdateLdapProviderOK handles this case with default header values.

Expected response to a valid request.
*/
type UpdateLdapProviderOK struct {
	Payload *models.UpdateLdapProviderResponse
}

func (o *UpdateLdapProviderOK) Error() string {
	return fmt.Sprintf("[POST /iam/updateLdapProvider][%d] updateLdapProviderOK  %+v", 200, o.Payload)
}

func (o *UpdateLdapProviderOK) GetPayload() *models.UpdateLdapProviderResponse {
	return o.Payload
}

func (o *UpdateLdapProviderOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UpdateLdapProviderResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLdapProviderDefault creates a UpdateLdapProviderDefault with default headers values
func NewUpdateLdapProviderDefault(code int) *UpdateLdapProviderDefault {
	return &UpdateLdapProviderDefault{
		_statusCode: code,
	}
}

/*UpdateLdapProviderDefault handles this case with default header values.

The default response on an error.
*/
type UpdateLdapProviderDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the update ldap provider default response
func (o *UpdateLdapProviderDefault) Code() int {
	return o._statusCode
}

func (o *UpdateLdapProviderDefault) Error() string {
	return fmt.Sprintf("[POST /iam/updateLdapProvider][%d] updateLdapProvider default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateLdapProviderDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateLdapProviderDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
