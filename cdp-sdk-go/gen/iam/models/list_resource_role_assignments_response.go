// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ListResourceRoleAssignmentsResponse Response object for a list resource role assignments request.
//
// swagger:model ListResourceRoleAssignmentsResponse
type ListResourceRoleAssignmentsResponse struct {

	// The token to use when requesting the next set of results. If not present, there are no additional results.
	NextToken string `json:"nextToken,omitempty"`

	// The resource role assignments.
	// Required: true
	ResourceRoleAssignments []*ResourceRoleAssignment `json:"resourceRoleAssignments"`
}

// Validate validates this list resource role assignments response
func (m *ListResourceRoleAssignmentsResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateResourceRoleAssignments(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ListResourceRoleAssignmentsResponse) validateResourceRoleAssignments(formats strfmt.Registry) error {

	if err := validate.Required("resourceRoleAssignments", "body", m.ResourceRoleAssignments); err != nil {
		return err
	}

	for i := 0; i < len(m.ResourceRoleAssignments); i++ {
		if swag.IsZero(m.ResourceRoleAssignments[i]) { // not required
			continue
		}

		if m.ResourceRoleAssignments[i] != nil {
			if err := m.ResourceRoleAssignments[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("resourceRoleAssignments" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ListResourceRoleAssignmentsResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ListResourceRoleAssignmentsResponse) UnmarshalBinary(b []byte) error {
	var res ListResourceRoleAssignmentsResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
