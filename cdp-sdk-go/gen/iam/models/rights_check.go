// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RightsCheck A check for a set of rights. If a resourceCrn is specified, the check will be performed over that resource. If no resourceCrn is specified, the check will be performed over all resources.
//
// swagger:model RightsCheck
type RightsCheck struct {

	// The resource CRN for which to check for rights.
	ResourceCrn string `json:"resourceCrn,omitempty"`

	// The rights that will be checked.
	// Required: true
	Rights []string `json:"rights"`
}

// Validate validates this rights check
func (m *RightsCheck) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRights(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RightsCheck) validateRights(formats strfmt.Registry) error {

	if err := validate.Required("rights", "body", m.Rights); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this rights check based on context it is used
func (m *RightsCheck) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *RightsCheck) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RightsCheck) UnmarshalBinary(b []byte) error {
	var res RightsCheck
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
